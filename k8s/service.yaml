apiVersion: v1
kind: Service
metadata:
  name: seraphc2-service
  namespace: seraphc2
  labels:
    app.kubernetes.io/name: seraphc2
    app.kubernetes.io/component: service
    app.kubernetes.io/part-of: seraphc2
  annotations:
    prometheus.io/scrape: 'true'
    prometheus.io/port: '9090'
    prometheus.io/path: '/metrics'
spec:
  type: ClusterIP
  ports:
    - name: http
      port: 80
      targetPort: http
      protocol: TCP
    - name: https
      port: 443
      targetPort: https
      protocol: TCP
    - name: metrics
      port: 9090
      targetPort: metrics
      protocol: TCP
  selector:
    app.kubernetes.io/name: seraphc2
    app.kubernetes.io/component: application

---
apiVersion: v1
kind: Service
metadata:
  name: postgres-service
  namespace: seraphc2
  labels:
    app.kubernetes.io/name: postgres
    app.kubernetes.io/component: service
    app.kubernetes.io/part-of: seraphc2
spec:
  type: ClusterIP
  ports:
    - name: postgres
      port: 5432
      targetPort: postgres
      protocol: TCP
  selector:
    app.kubernetes.io/name: postgres
    app.kubernetes.io/component: database

---
apiVersion: v1
kind: Service
metadata:
  name: redis-service
  namespace: seraphc2
  labels:
    app.kubernetes.io/name: redis
    app.kubernetes.io/component: service
    app.kubernetes.io/part-of: seraphc2
spec:
  type: ClusterIP
  ports:
    - name: redis
      port: 6379
      targetPort: redis
      protocol: TCP
  selector:
    app.kubernetes.io/name: redis
    app.kubernetes.io/component: cache

---
# Headless service for StatefulSet (if needed for clustering)
apiVersion: v1
kind: Service
metadata:
  name: seraphc2-headless
  namespace: seraphc2
  labels:
    app.kubernetes.io/name: seraphc2
    app.kubernetes.io/component: headless-service
    app.kubernetes.io/part-of: seraphc2
spec:
  type: ClusterIP
  clusterIP: None
  ports:
    - name: http
      port: 3000
      targetPort: http
      protocol: TCP
  selector:
    app.kubernetes.io/name: seraphc2
    app.kubernetes.io/component: application
