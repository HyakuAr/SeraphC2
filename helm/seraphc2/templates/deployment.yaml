apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "seraphc2.fullname" . }}
  labels:
    {{- include "seraphc2.labels" . | nindent 4 }}
    app.kubernetes.io/component: application
  {{- with .Values.commonAnnotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.deployment.replicaCount }}
  {{- end }}
  strategy:
    {{- toYaml .Values.deployment.strategy | nindent 4 }}
  selector:
    matchLabels:
      {{- include "seraphc2.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: application
  template:
    metadata:
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
        checksum/secret: {{ include (print $.Template.BasePath "/secret.yaml") . | sha256sum }}
        {{- with .Values.deployment.podAnnotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
        {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      labels:
        {{- include "seraphc2.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: application
        {{- with .Values.deployment.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
        {{- with .Values.podLabels }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- include "seraphc2.imagePullSecrets" . | nindent 6 }}
      serviceAccountName: {{ include "seraphc2.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.deployment.podSecurityContext | nindent 8 }}
      {{- with .Values.initContainers }}
      initContainers:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.deployment.securityContext | nindent 12 }}
          image: {{ include "seraphc2.image" . }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.config.port }}
              protocol: TCP
            - name: https
              containerPort: {{ .Values.config.httpsPort }}
              protocol: TCP
            - name: metrics
              containerPort: {{ .Values.config.metricsPort }}
              protocol: TCP
          envFrom:
            - configMapRef:
                name: {{ include "seraphc2.fullname" . }}-config
            - secretRef:
                name: {{ include "seraphc2.fullname" . }}-secrets
            {{- range .Values.extraEnvVarsCM }}
            - configMapRef:
                name: {{ . }}
            {{- end }}
            {{- range .Values.extraEnvVarsSecret }}
            - secretRef:
                name: {{ . }}
            {{- end }}
          livenessProbe:
            {{- toYaml .Values.deployment.livenessProbe | nindent 12 }}
          readinessProbe:
            {{- toYaml .Values.deployment.readinessProbe | nindent 12 }}
          resources:
            {{- toYaml .Values.deployment.resources | nindent 12 }}
          volumeMounts:
            - name: logs
              mountPath: /app/logs
            {{- if .Values.persistence.uploads.enabled }}
            - name: uploads
              mountPath: {{ .Values.config.uploadPath }}
            {{- end }}
            - name: tmp
              mountPath: /tmp
            {{- with .Values.extraVolumeMounts }}
            {{- toYaml . | nindent 12 }}
            {{- end }}
        {{- with .Values.sidecars }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      volumes:
        - name: logs
          emptyDir: {}
        {{- if .Values.persistence.uploads.enabled }}
        - name: uploads
          persistentVolumeClaim:
            claimName: {{ include "seraphc2.fullname" . }}-uploads
        {{- end }}
        - name: tmp
          emptyDir: {}
        {{- with .Values.extraVolumes }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      {{- with .Values.deployment.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.deployment.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.deployment.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}

{{- if .Values.postgresql.enabled }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "seraphc2.postgresql.fullname" . }}
  labels:
    {{- include "seraphc2.labels" . | nindent 4 }}
    app.kubernetes.io/component: database
  {{- with .Values.commonAnnotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      {{- include "seraphc2.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: database
  template:
    metadata:
      labels:
        {{- include "seraphc2.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: database
    spec:
      securityContext:
        {{- toYaml .Values.postgresql.primary.podSecurityContext | nindent 8 }}
      containers:
        - name: postgresql
          securityContext:
            {{- toYaml .Values.postgresql.primary.containerSecurityContext | nindent 12 }}
          image: {{ include "seraphc2.postgresql.image" . }}
          imagePullPolicy: {{ .Values.postgresql.image.pullPolicy }}
          ports:
            - name: postgresql
              containerPort: 5432
              protocol: TCP
          env:
            - name: POSTGRES_DB
              value: {{ .Values.postgresql.auth.database }}
            - name: POSTGRES_USER
              value: {{ .Values.postgresql.auth.username }}
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "seraphc2.fullname" . }}-postgresql-secrets
                  key: POSTGRES_PASSWORD
            - name: POSTGRES_INITDB_ARGS
              value: "--encoding=UTF-8 --locale=C"
          livenessProbe:
            exec:
              command:
                - pg_isready
                - -U
                - {{ .Values.postgresql.auth.username }}
                - -d
                - {{ .Values.postgresql.auth.database }}
            initialDelaySeconds: 30
            periodSeconds: 30
            timeoutSeconds: 10
            failureThreshold: 3
          readinessProbe:
            exec:
              command:
                - pg_isready
                - -U
                - {{ .Values.postgresql.auth.username }}
                - -d
                - {{ .Values.postgresql.auth.database }}
            initialDelaySeconds: 15
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
          resources:
            {{- toYaml .Values.postgresql.primary.resources | nindent 12 }}
          volumeMounts:
            - name: data
              mountPath: /var/lib/postgresql/data
            - name: run
              mountPath: /var/run/postgresql
            - name: tmp
              mountPath: /tmp
      volumes:
        - name: data
          {{- if .Values.postgresql.primary.persistence.enabled }}
          persistentVolumeClaim:
            claimName: {{ include "seraphc2.postgresql.fullname" . }}-data
          {{- else }}
          emptyDir: {}
          {{- end }}
        - name: run
          emptyDir: {}
        - name: tmp
          emptyDir: {}
{{- end }}

{{- if .Values.redis.enabled }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "seraphc2.redis.fullname" . }}
  labels:
    {{- include "seraphc2.labels" . | nindent 4 }}
    app.kubernetes.io/component: cache
  {{- with .Values.commonAnnotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      {{- include "seraphc2.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: cache
  template:
    metadata:
      labels:
        {{- include "seraphc2.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: cache
    spec:
      securityContext:
        {{- toYaml .Values.redis.master.podSecurityContext | nindent 8 }}
      containers:
        - name: redis
          securityContext:
            {{- toYaml .Values.redis.master.containerSecurityContext | nindent 12 }}
          image: {{ include "seraphc2.redis.image" . }}
          imagePullPolicy: {{ .Values.redis.image.pullPolicy }}
          command:
            - redis-server
            - /usr/local/etc/redis/redis.conf
            - --requirepass
            - $(REDIS_PASSWORD)
          ports:
            - name: redis
              containerPort: 6379
              protocol: TCP
          env:
            - name: REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "seraphc2.fullname" . }}-secrets
                  key: REDIS_PASSWORD
          livenessProbe:
            exec:
              command:
                - redis-cli
                - --no-auth-warning
                - -a
                - $(REDIS_PASSWORD)
                - ping
            initialDelaySeconds: 30
            periodSeconds: 30
            timeoutSeconds: 10
            failureThreshold: 3
          readinessProbe:
            exec:
              command:
                - redis-cli
                - --no-auth-warning
                - -a
                - $(REDIS_PASSWORD)
                - ping
            initialDelaySeconds: 15
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
          resources:
            {{- toYaml .Values.redis.master.resources | nindent 12 }}
          volumeMounts:
            - name: data
              mountPath: /data
            - name: config
              mountPath: /usr/local/etc/redis/redis.conf
              subPath: redis.conf
            - name: tmp
              mountPath: /tmp
      volumes:
        - name: data
          {{- if .Values.redis.master.persistence.enabled }}
          persistentVolumeClaim:
            claimName: {{ include "seraphc2.redis.fullname" . }}-data
          {{- else }}
          emptyDir: {}
          {{- end }}
        - name: config
          configMap:
            name: {{ include "seraphc2.fullname" . }}-redis-config
        - name: tmp
          emptyDir: {}
{{- end }}