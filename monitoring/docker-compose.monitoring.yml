# SeraphC2 Monitoring Stack
version: '3.8'

services:
  prometheus:
    image: prom/prometheus:v2.45.0
    container_name: seraphc2-prometheus
    restart: unless-stopped
    ports:
      - '9090:9090'
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - ./alerts.yml:/etc/prometheus/alerts.yml:ro
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--storage.tsdb.retention.time=30d'
      - '--storage.tsdb.retention.size=10GB'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'
      - '--web.enable-admin-api'
      - '--log.level=info'
    networks:
      - monitoring
      - seraphc2

  grafana:
    image: grafana/grafana:10.0.0
    container_name: seraphc2-grafana
    restart: unless-stopped
    ports:
      - '3001:3000'
    volumes:
      - ./grafana/grafana.ini:/etc/grafana/grafana.ini:ro
      - ./grafana/provisioning:/etc/grafana/provisioning:ro
      - ./grafana/dashboards:/etc/grafana/provisioning/dashboards/seraphc2:ro
      - grafana_data:/var/lib/grafana
    environment:
      - GRAFANA_ADMIN_PASSWORD=${GRAFANA_ADMIN_PASSWORD:-admin123}
      - GRAFANA_SECRET_KEY=${GRAFANA_SECRET_KEY:-SW2YcwTIb9zpOOhoPsMm}
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_ADMIN_PASSWORD:-admin123}
      - GF_SECURITY_SECRET_KEY=${GRAFANA_SECRET_KEY:-SW2YcwTIb9zpOOhoPsMm}
    depends_on:
      - prometheus
    networks:
      - monitoring
    user: '472'

  alertmanager:
    image: prom/alertmanager:v0.25.0
    container_name: seraphc2-alertmanager
    restart: unless-stopped
    ports:
      - '9093:9093'
    volumes:
      - ./alertmanager.yml:/etc/alertmanager/alertmanager.yml:ro
      - alertmanager_data:/alertmanager
    command:
      - '--config.file=/etc/alertmanager/alertmanager.yml'
      - '--storage.path=/alertmanager'
      - '--web.external-url=http://localhost:9093'
      - '--log.level=info'
    networks:
      - monitoring

  node-exporter:
    image: prom/node-exporter:v1.6.0
    container_name: seraphc2-node-exporter
    restart: unless-stopped
    ports:
      - '9100:9100'
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
      - '--log.level=info'
    networks:
      - monitoring

  postgres-exporter:
    image: prometheuscommunity/postgres-exporter:v0.13.2
    container_name: seraphc2-postgres-exporter
    restart: unless-stopped
    ports:
      - '9187:9187'
    environment:
      - DATA_SOURCE_NAME=${POSTGRES_EXPORTER_DSN:-postgresql://seraphc2:password@postgres:5432/seraphc2?sslmode=disable}
    networks:
      - monitoring
      - seraphc2
    depends_on:
      - postgres

  redis-exporter:
    image: oliver006/redis_exporter:v1.52.0
    container_name: seraphc2-redis-exporter
    restart: unless-stopped
    ports:
      - '9121:9121'
    environment:
      - REDIS_ADDR=${REDIS_ADDR:-redis://redis:6379}
      - REDIS_PASSWORD=${REDIS_PASSWORD:-}
    networks:
      - monitoring
      - seraphc2
    depends_on:
      - redis

  loki:
    image: grafana/loki:2.8.0
    container_name: seraphc2-loki
    restart: unless-stopped
    ports:
      - '3100:3100'
    volumes:
      - ./loki.yml:/etc/loki/local-config.yaml:ro
      - loki_data:/loki
    command: -config.file=/etc/loki/local-config.yaml
    networks:
      - monitoring

  promtail:
    image: grafana/promtail:2.8.0
    container_name: seraphc2-promtail
    restart: unless-stopped
    volumes:
      - ./promtail.yml:/etc/promtail/config.yml:ro
      - /var/log:/var/log:ro
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
    command: -config.file=/etc/promtail/config.yml
    networks:
      - monitoring
    depends_on:
      - loki

volumes:
  prometheus_data:
    driver: local
  grafana_data:
    driver: local
  alertmanager_data:
    driver: local
  loki_data:
    driver: local

networks:
  monitoring:
    driver: bridge
    name: seraphc2-monitoring
  seraphc2:
    external: true
    name: seraphc2_default
